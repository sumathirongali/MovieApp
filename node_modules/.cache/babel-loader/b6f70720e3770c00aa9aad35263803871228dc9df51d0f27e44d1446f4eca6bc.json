{"ast":null,"code":"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VCombobox.css\";\n\n// Components\nimport { makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { transformItem, useItems } from \"../../composables/items.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { genericComponent, omit, useRender, wrapInArray } from \"../../util/index.mjs\";\nimport { filterVTextFieldProps, makeVTextFieldProps } from \"../VTextField/VTextField.mjs\"; // Types\nfunction highlightResult(text, matches, length) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\nexport const VCombobox = genericComponent()({\n  name: 'VCombobox',\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array,\n    ...makeFilterProps({\n      filterKeys: ['title']\n    }),\n    ...makeSelectProps({\n      hideNoData: true,\n      returnObject: true\n    }),\n    ...omit(makeVTextFieldProps({\n      modelValue: null\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({\n      transition: false\n    })\n  },\n  emits: {\n    'update:modelValue': val => true,\n    'update:search': val => true,\n    'update:menu': val => true\n  },\n  setup(props, _ref) {\n    var _model$value$;\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = ref(false);\n    const isPristine = ref(true);\n    const menu = useProxiedModel(props, 'menu');\n    const selectionIndex = ref(-1);\n    const color = computed(() => {\n      var _vTextFieldRef$value;\n      return (_vTextFieldRef$value = vTextFieldRef.value) == null ? void 0 : _vTextFieldRef$value.color;\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v || [])), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const _search = ref(!props.multiple ? ((_model$value$ = model.value[0]) == null ? void 0 : _model$value$.title) ?? '' : '');\n    const search = computed({\n      get: () => {\n        return _search.value;\n      },\n      set: val => {\n        var _props$delimiters;\n        _search.value = val;\n        if (!props.multiple) {\n          model.value = [transformItem(props, val)];\n        }\n        if (val && props.multiple && (_props$delimiters = props.delimiters) != null && _props$delimiters.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim();\n              if (v) select(transformItem(props, v));\n            });\n            _search.value = '';\n          }\n        }\n        if (!val) selectionIndex.value = -1;\n        if (isFocused.value) menu.value = true;\n        isPristine.value = !val;\n      }\n    });\n    watch(_search, value => {\n      emit('update:search', value);\n    });\n    watch(model, value => {\n      if (!props.multiple) {\n        var _value$;\n        _search.value = ((_value$ = value[0]) == null ? void 0 : _value$.title) ?? '';\n      }\n    });\n    const {\n      filteredItems\n    } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value));\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v;\n      });\n    });\n    const selected = computed(() => selections.value.map(selection => selection.props.value));\n    const selection = computed(() => selections.value[selectionIndex.value]);\n    const listRef = ref();\n    function onClear(e) {\n      model.value = [];\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onClickControl() {\n      if (props.hideNoData && !items.value.length || props.readonly) return;\n      menu.value = true;\n    }\n    function onKeydown(e) {\n      if (props.readonly) return;\n      const selectionStart = vTextFieldRef.value.selectionStart;\n      const length = selected.value.length;\n      if (selectionIndex.value > -1) e.preventDefault();\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true;\n      }\n      if (e.key === 'ArrowDown') {\n        var _listRef$value;\n        e.preventDefault();\n        (_listRef$value = listRef.value) == null ? void 0 : _listRef$value.focus('next');\n      } else if (e.key === 'ArrowUp') {\n        var _listRef$value2;\n        e.preventDefault();\n        (_listRef$value2 = listRef.value) == null ? void 0 : _listRef$value2.focus('prev');\n      }\n      if (!props.multiple) return;\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1;\n          }\n          return;\n        }\n        select(selection.value);\n        nextTick(() => !selection.value && (selectionIndex.value = length - 2));\n      }\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n        if (selections.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\n        }\n      }\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n        if (selections.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(0, 0);\n        }\n      }\n      if (e.key === 'Enter') {\n        select(transformItem(props, search.value));\n        search.value = '';\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) isPristine.value = true;\n    }\n    function select(item) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value);\n        if (index === -1) {\n          model.value = [...model.value, item];\n        } else {\n          const value = [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        }\n        search.value = '';\n      } else {\n        model.value = [item];\n        _search.value = item.title;\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onFocusout(e) {\n      if (e.relatedTarget == null) {\n        var _vTextFieldRef$value2;\n        (_vTextFieldRef$value2 = vTextFieldRef.value) == null ? void 0 : _vTextFieldRef$value2.focus();\n      }\n    }\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false;\n    });\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1;\n      } else {\n        menu.value = false;\n        if (!props.multiple || !search.value) return;\n        model.value = [...model.value, transformItem(props, search.value)];\n        search.value = '';\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const [textFieldProps] = filterVTextFieldProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [$event => search.value = $event, v => {\n          if (v == null) model.value = [];\n        }],\n        \"validationValue\": model.externalValue,\n        \"dirty\": model.value.length > 0,\n        \"class\": ['v-combobox', {\n          'v-combobox--active-menu': menu.value,\n          'v-combobox--chips': !!props.chips,\n          'v-combobox--selecting-index': selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\n        }],\n        \"appendInnerIcon\": props.items.length ? props.menuIcon : undefined,\n        \"readonly\": props.readonly,\n        \"onClick:clear\": onClear,\n        \"onClick:control\": onClickControl,\n        \"onClick:input\": onClickControl,\n        \"onFocus\": () => isFocused.value = true,\n        \"onBlur\": () => isFocused.value = false,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => {\n          var _slots$noData, _slots$prependItem, _slots$appendItem;\n          return _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n            \"modelValue\": menu.value,\n            \"onUpdate:modelValue\": $event => menu.value = $event,\n            \"activator\": \"parent\",\n            \"contentClass\": \"v-combobox__content\",\n            \"eager\": props.eager,\n            \"openOnClick\": false,\n            \"closeOnContentClick\": false,\n            \"transition\": props.transition,\n            \"onAfterLeave\": onAfterLeave\n          }, props.menuProps), {\n            default: () => [_createVNode(VList, {\n              \"ref\": listRef,\n              \"selected\": selected.value,\n              \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n              \"onMousedown\": e => e.preventDefault(),\n              \"onFocusin\": onFocusin,\n              \"onFocusout\": onFocusout\n            }, {\n              default: () => [!filteredItems.value.length && !props.hideNoData && (((_slots$noData = slots['no-data']) == null ? void 0 : _slots$noData.call(slots)) ?? _createVNode(VListItem, {\n                \"title\": t(props.noDataText)\n              }, null)), (_slots$prependItem = slots['prepend-item']) == null ? void 0 : _slots$prependItem.call(slots), filteredItems.value.map((_ref2, index) => {\n                var _slots$item;\n                let {\n                  item,\n                  matches\n                } = _ref2;\n                return ((_slots$item = slots.item) == null ? void 0 : _slots$item.call(slots, {\n                  item,\n                  index,\n                  props: mergeProps(item.props, {\n                    onClick: () => select(item)\n                  })\n                })) ?? _createVNode(VListItem, _mergeProps({\n                  \"key\": index\n                }, item.props, {\n                  \"onClick\": () => select(item)\n                }), {\n                  prepend: _ref3 => {\n                    let {\n                      isSelected\n                    } = _ref3;\n                    return props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"modelValue\": isSelected,\n                      \"ripple\": false\n                    }, null) : undefined;\n                  },\n                  title: () => {\n                    var _search$value;\n                    return isPristine.value ? item.title : highlightResult(item.title, matches.title, ((_search$value = search.value) == null ? void 0 : _search$value.length) ?? 0);\n                  }\n                });\n              }), (_slots$appendItem = slots['append-item']) == null ? void 0 : _slots$appendItem.call(slots)]\n            })]\n          }), selections.value.map((item, index) => {\n            function onChipClose(e) {\n              e.stopPropagation();\n              e.preventDefault();\n              select(item);\n            }\n            const slotProps = {\n              'onClick:close': onChipClose,\n              modelValue: true,\n              'onUpdate:modelValue': undefined\n            };\n            return _createVNode(\"div\", {\n              \"key\": item.value,\n              \"class\": ['v-combobox__selection', index === selectionIndex.value && ['v-combobox__selection--selected', textColorClasses.value]],\n              \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n            }, [hasChips ? _createVNode(VDefaultsProvider, {\n              \"defaults\": {\n                VChip: {\n                  closable: props.closableChips,\n                  size: 'small',\n                  text: item.title\n                }\n              }\n            }, {\n              default: () => [slots.chip ? slots.chip({\n                item,\n                index,\n                props: slotProps\n              }) : _createVNode(VChip, slotProps, null)]\n            }) : slots.selection ? slots.selection({\n              item,\n              index\n            }) : _createVNode(\"span\", {\n              \"class\": \"v-combobox__selection-text\"\n            }, [item.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n              \"class\": \"v-combobox__selection-comma\"\n            }, [_createTextVNode(\",\")])])]);\n          })]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n});","map":{"version":3,"mappings":"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","names":["makeSelectProps","VCheckboxBtn","VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeFilterProps","useFilter","makeTransitionProps","transformItem","useItems","forwardRefs","useLocale","useProxiedModel","useTextColor","computed","mergeProps","nextTick","ref","watch","genericComponent","omit","useRender","wrapInArray","filterVTextFieldProps","makeVTextFieldProps","highlightResult","text","matches","length","Array","isArray","Error","substr","VCombobox","name","props","delimiters","filterKeys","hideNoData","returnObject","modelValue","transition","emits","val","setup","emit","slots","t","vTextFieldRef","isFocused","isPristine","menu","selectionIndex","color","value","_vTextFieldRef$value","items","transformIn","transformOut","textColorClasses","textColorStyles","model","v","transformed","multiple","_search","_model$value$","title","search","get","set","_props$delimiters","values","split","RegExp","join","forEach","trim","select","_value$","filteredItems","undefined","selections","map","find","item","valueComparator","selected","selection","listRef","onClear","e","openOnClear","onClickControl","readonly","onKeydown","selectionStart","preventDefault","includes","key","_listRef$value","focus","_listRef$value2","prev","setSelectionRange","next","onAfterLeave","index","findIndex","splice","onFocusin","onFocusout","relatedTarget","_vTextFieldRef$value2","hasChips","chips","chip","textFieldProps","externalValue","menuIcon","default","eager","menuProps","_slots$noData","noDataText","_slots$prependItem","_slots$item","onClick","prepend","_ref3","isSelected","hideSelected","_search$value","_slots$appendItem","onChipClose","stopPropagation","slotProps","closable","closableChips","size"],"sources":["../../../src/components/VCombobox/VCombobox.tsx"],"sourcesContent":["// Styles\nimport './VCombobox.sass'\n\n// Components\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { transformItem, useItems } from '@/composables/items'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utility\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue'\nimport { genericComponent, omit, useRender, wrapInArray } from '@/util'\nimport { filterVTextFieldProps, makeVTextFieldProps } from '../VTextField/VTextField'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { InternalItem } from '@/composables/items'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nfunction highlightResult (text: string, matches: FilterMatch, length: number) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-combobox__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-combobox__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-combobox__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = string | (T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any))\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VCombobox = genericComponent<new <\n  T,\n  ReturnObject extends boolean = true,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VCombobox',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array as PropType<string[]>,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps({ hideNoData: true, returnObject: true }),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n    'update:search': (val: string) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const menu = useProxiedModel(props, 'menu')\n    const selectionIndex = ref(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v || [])),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const _search = ref(!props.multiple ? model.value[0]?.title ?? '' : '')\n    const search = computed<string>({\n      get: () => {\n        return _search.value\n      },\n      set: val => {\n        _search.value = val\n        if (!props.multiple) {\n          model.value = [transformItem(props, val)]\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`))\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim()\n              if (v) select(transformItem(props, v))\n            })\n            _search.value = ''\n          }\n        }\n\n        if (!val) selectionIndex.value = -1\n        if (isFocused.value) menu.value = true\n\n        isPristine.value = !val\n      },\n    })\n    watch(_search, value => {\n      emit('update:search', value)\n    })\n    watch(model, value => {\n      if (!props.multiple) {\n        _search.value = value[0]?.title ?? ''\n      }\n    })\n\n    const { filteredItems } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n    const selection = computed(() => selections.value[selectionIndex.value])\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onClickControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly\n      ) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = selected.value.length\n\n      if (selectionIndex.value > -1) e.preventDefault()\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault()\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault()\n        listRef.value?.focus('prev')\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        select(selection.value)\n\n        nextTick(() => !selection.value && (selectionIndex.value = length - 2))\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (selections.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (selections.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n\n      if (e.key === 'Enter') {\n        select(transformItem(props, search.value))\n        search.value = ''\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => selection === item.value)\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n\n        search.value = ''\n      } else {\n        model.value = [item]\n        _search.value = item.title\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1\n      } else {\n        menu.value = false\n\n        if (!props.multiple || !search.value) return\n\n        model.value = [...model.value, transformItem(props, search.value)]\n        search.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const [textFieldProps] = filterVTextFieldProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          v-model={ search.value }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          class={[\n            'v-combobox',\n            {\n              'v-combobox--active-menu': menu.value,\n              'v-combobox--chips': !!props.chips,\n              'v-combobox--selecting-index': selectionIndex.value > -1,\n              [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.items.length ? props.menuIcon : undefined }\n          readonly={ props.readonly }\n          onClick:clear={ onClear }\n          onClick:control={ onClickControl }\n          onClick:input={ onClickControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-combobox__content\"\n                  eager={ props.eager }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  <VList\n                    ref={ listRef }\n                    selected={ selected.value }\n                    selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                    onFocusin={ onFocusin }\n                    onFocusout={ onFocusout }\n                  >\n                    { !filteredItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                      <VListItem title={ t(props.noDataText) } />\n                    )) }\n\n                    { slots['prepend-item']?.() }\n\n                    { filteredItems.value.map(({ item, matches }, index) => slots.item?.({\n                      item,\n                      index,\n                      props: mergeProps(item.props, { onClick: () => select(item) }),\n                    }) ?? (\n                      <VListItem\n                        key={ index }\n                        { ...item.props }\n                        onClick={ () => select(item) }\n                      >\n                        {{\n                          prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                            <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                          ) : undefined,\n                          title: () => {\n                            return isPristine.value\n                              ? item.title\n                              : highlightResult(item.title, matches.title, search.value?.length ?? 0)\n                          },\n                        }}\n                      </VListItem>\n                    )) }\n\n                    { slots['append-item']?.() }\n                  </VList>\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-combobox__selection',\n                        index === selectionIndex.value && [\n                          'v-combobox__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips ? (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: item.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ item, index, props: slotProps })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) : (\n                        slots.selection\n                          ? slots.selection({ item, index })\n                          : (\n                            <span class=\"v-combobox__selection-text\">\n                              { item.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-combobox__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      ) }\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VCombobox = InstanceType<typeof VCombobox>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}