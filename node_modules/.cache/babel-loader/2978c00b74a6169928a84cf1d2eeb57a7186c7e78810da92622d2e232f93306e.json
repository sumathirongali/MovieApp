{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport bcrypt from \"bcryptjs\";\nexport default {\n  name: 'signUpComp',\n  data() {\n    return {\n      fullName: '',\n      age: '',\n      email: '',\n      password: '',\n      ageRules: [value => !!value || 'Required.', value => value && value >= 10 && value <= 100 || '• Age must be greater than 9 and less than 100.'],\n      passRules: [value => !!value || 'Required.', value => value && value.length >= 6 && value != this.fullName || '• Minimum password length is 6. • Password cannot be your name.'],\n      emailRules: [value => !!value || 'Required.', value => value && /.+@.+/.test(value) || 'Invalid email address'],\n      nameRules: [value => !!value || 'Required.']\n    };\n  },\n  methods: {\n    async signUp() {\n      let users = await axios.get(`http://localhost:3000/users/?email=${this.email}`);\n      if (this.password.length > 6 && this.fullName != this.password && this.age > 9 && this.age < 100 && /.+@.+/.test(this.email)) {\n        if (users.data.length === 0) {\n          let result = await axios.post(\"http://localhost:3000/users\", {\n            name: this.fullName,\n            age: this.age,\n            email: this.email,\n            password: bcrypt.hashSync(this.password, 10)\n          });\n          if (result.status == 201) {\n            alert(\"registration succces\");\n            //localStorage.setItem(\"user-info\", JSON.stringify(result.data));\n            this.$router.push({\n              name: 'LoginPage'\n            });\n          } else {\n            alert(\"registration unsuccess. Please try again!\");\n            this.fullName = '', this.age = '', this.email = '', this.password = '';\n          }\n        } else {\n          window.alert(\"Username already exists. Use different details\");\n          this.fullName = '', this.age = '', this.email = '', this.password = '';\n        }\n      } else {\n        alert('Wrong credentials!. Please follow input checks');\n        this.fullName = '', this.age = '', this.email = '', this.password = '';\n      }\n    },\n    /*\r\n    async signUp() {\r\n        const user = {\r\n            name: this.fullName,\r\n            age: this.age,\r\n            email: this.email,\r\n            password: bcrypt.hashSync(this.password, 10)\r\n        }\r\n        const users = await fetch(`http://localhost:3000/users/?email=${this.email}`);\r\n        const userName = await users.json();\r\n        if (userName.length === 0) {\r\n            const res = await fetch(\"http://localhost:3000/users\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(user),\r\n            });\r\n            if (res.status === 201) {\r\n                {\r\n                    alert(\"registration succces\");\r\n                    this.$router.push({\r\n                        name: 'LoginPage'\r\n                    })\r\n                }\r\n            } else {\r\n                alert('registration unsuccess. Please try again!');\r\n                this.fullName = '',\r\n                    this.age = '',\r\n                    this.email = '',\r\n                    this.password = ''\r\n              }\r\n        } else {\r\n            window.alert(\"Username already exists. Use different details\");\r\n            this.fullName = '',\r\n                this.age = '',\r\n                this.email = '',\r\n                this.password = ''\r\n        }\r\n    },\r\n    */\n\n    backToHomePage() {\n      return this.$router.push({\n        name: 'HomePage'\n      });\n    }\n  },\n  mounted() {\n    let user = localStorage.getItem('user-info');\n    if (user) {\n      return this.$router.push({\n        name: 'LandingPage'\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","bcrypt","name","data","fullName","age","email","password","ageRules","value","passRules","length","emailRules","test","nameRules","methods","signUp","users","get","result","post","hashSync","status","alert","$router","push","window","backToHomePage","mounted","user","localStorage","getItem"],"sourceRoot":"","sources":["C:\\Workspace\\MovieApp\\src\\components\\SignUp.vue"],"sourcesContent":["<template>\r\n<v-card-title class=\"text-xs-h6 text-md-h5 text-lg-h4\"><b>Sign Up</b></v-card-title><br />\r\n\r\n<v-responsive class=\"mx-auto\" max-width=\"344\">\r\n    <v-text-field type=\"text\" placeholder=\"Enter your name\" v-model=\"fullName\" :rules=\"nameRules\" hide-details=\"auto\" /><br />\r\n    <v-text-field type=\"number\" placeholder=\"Enter your age\" v-model=\"age\" :rules=\"ageRules\" hide-details=\"auto\" /><br />\r\n    <v-text-field type=\"email\" placeholder=\"Enter your email\" v-model=\"email\" :rules=\"emailRules\" hide-details=\"auto\" /><br />\r\n    <v-text-field type=\"password\" placeholder=\"Enter your password\" v-model=\"password\" :rules=\"passRules\" hide-details=\"auto\" /><br />\r\n</v-responsive>\r\n<v-btn v-on:click=\"signUp()\" color=\"primary\" elevation=\"15\">SignUp</v-btn>\r\n\r\n<footer>\r\n    <v-btn tile outlined color=\"success\" v-on:click=\"backToHomePage()\">Back to home page</v-btn>\r\n</footer>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport bcrypt from \"bcryptjs\";\r\nexport default {\r\n    name: 'signUpComp',\r\n    data() {\r\n        return {\r\n            fullName: '',\r\n            age: '',\r\n            email: '',\r\n            password: '',\r\n            ageRules: [\r\n                value => !!value || 'Required.',\r\n                value => (value && value >= 10 && value <= 100) || '• Age must be greater than 9 and less than 100.'\r\n            ],\r\n            passRules: [\r\n                value => !!value || 'Required.',\r\n                value => (value && value.length >= 6 && value != this.fullName) || '• Minimum password length is 6. • Password cannot be your name.'\r\n            ],\r\n            emailRules: [\r\n                value => !!value || 'Required.',\r\n                value => (value && /.+@.+/.test(value)) || 'Invalid email address'\r\n            ],\r\n            nameRules: [\r\n                value => !!value || 'Required.'\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        async signUp() {\r\n            let users = await axios.get(`http://localhost:3000/users/?email=${this.email}`);\r\n\r\n            if (this.password.length > 6 && this.fullName != this.password && this.age > 9 && this.age < 100 && (/.+@.+/.test(this.email))) {\r\n\r\n                if (users.data.length === 0) {\r\n                    let result = await axios.post(\"http://localhost:3000/users\", {\r\n                        name: this.fullName,\r\n                        age: this.age,\r\n                        email: this.email,\r\n                        password: bcrypt.hashSync(this.password, 10)\r\n                    });\r\n\r\n                    if (result.status == 201) {\r\n                        alert(\"registration succces\");\r\n                        //localStorage.setItem(\"user-info\", JSON.stringify(result.data));\r\n                        this.$router.push({\r\n                            name: 'LoginPage'\r\n                        })\r\n                    } else {\r\n                        alert(\"registration unsuccess. Please try again!\");\r\n                        this.fullName = '',\r\n                            this.age = '',\r\n                            this.email = '',\r\n                            this.password = ''\r\n                    }\r\n                } else {\r\n                    window.alert(\"Username already exists. Use different details\");\r\n                    this.fullName = '',\r\n                        this.age = '',\r\n                        this.email = '',\r\n                        this.password = ''\r\n                }\r\n            } else {\r\n                alert('Wrong credentials!. Please follow input checks');\r\n                this.fullName = '',\r\n                    this.age = '',\r\n                    this.email = '',\r\n                    this.password = ''\r\n            }\r\n        },\r\n\r\n        /*\r\n        async signUp() {\r\n            const user = {\r\n                name: this.fullName,\r\n                age: this.age,\r\n                email: this.email,\r\n                password: bcrypt.hashSync(this.password, 10)\r\n            }\r\n            const users = await fetch(`http://localhost:3000/users/?email=${this.email}`);\r\n            const userName = await users.json();\r\n            if (userName.length === 0) {\r\n                const res = await fetch(\"http://localhost:3000/users\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"content-type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(user),\r\n                });\r\n                if (res.status === 201) {\r\n                    {\r\n                        alert(\"registration succces\");\r\n                        this.$router.push({\r\n                            name: 'LoginPage'\r\n                        })\r\n                    }\r\n                } else {\r\n                    alert('registration unsuccess. Please try again!');\r\n                    this.fullName = '',\r\n                        this.age = '',\r\n                        this.email = '',\r\n                        this.password = ''\r\n\r\n                }\r\n            } else {\r\n                window.alert(\"Username already exists. Use different details\");\r\n                this.fullName = '',\r\n                    this.age = '',\r\n                    this.email = '',\r\n                    this.password = ''\r\n            }\r\n        },\r\n        */\r\n\r\n        backToHomePage() {\r\n            return this.$router.push({\r\n                name: 'HomePage'\r\n            });\r\n        }\r\n    },\r\n    mounted() {\r\n        let user = localStorage.getItem('user-info');\r\n        if (user) {\r\n            return this.$router.push({\r\n                name: 'LandingPage'\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nfooter {\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n}\r\n\r\nbody {\r\n    background-color: aqua;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}