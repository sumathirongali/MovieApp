{"ast":null,"code":"// Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { defineComponent } from \"../../util/index.mjs\";\nexport const VHover = defineComponent({\n  name: 'VHover',\n  props: {\n    disabled: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: undefined\n    },\n    ...makeDelayProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isHovering = useProxiedModel(props, 'modelValue');\n    const {\n      runOpenDelay,\n      runCloseDelay\n    } = useDelay(props, value => !props.disabled && (isHovering.value = value));\n    return () => {\n      var _slots$default;\n      return (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {\n        isHovering: isHovering.value,\n        props: {\n          onMouseenter: runOpenDelay,\n          onMouseleave: runCloseDelay\n        }\n      });\n    };\n  }\n});","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,cAAc,EAAEC,QAAQ;AAAA,SACxBC,eAAe,8CAExB;AAAA,SACSC,eAAe;AAExB,OAAO,MAAMC,MAAM,GAAGD,eAAe,CAAC;EACpCE,IAAI,EAAE,QAAQ;EAEdC,KAAK,EAAE;IACLC,QAAQ,EAAEC,OAAO;IACjBC,UAAU,EAAE;MACVC,IAAI,EAAEF,OAAO;MACbG,OAAO,EAAEC;IACX,CAAC;IAED,GAAGZ,cAAc;EACnB,CAAC;EAEDa,KAAK,EAAE;IACL,mBAAmB,EAAGC,KAAc,IAAK;EAC3C,CAAC;EAEDC,KAAK,CAAET,KAAK,QAAa;IAAA,IAAX;MAAEU;IAAM,CAAC;IACrB,MAAMC,UAAU,GAAGf,eAAe,CAACI,KAAK,EAAE,YAAY,CAAC;IACvD,MAAM;MAAEY,YAAY;MAAEC;IAAc,CAAC,GAAGlB,QAAQ,CAACK,KAAK,EAAEQ,KAAK,IAAI,CAACR,KAAK,CAACC,QAAQ,KAAKU,UAAU,CAACH,KAAK,GAAGA,KAAK,CAAC,CAAC;IAE/G,OAAO;MAAA;MAAA,yBAAME,KAAK,CAACL,OAAO,qBAAbS,yBAAK,EAAW;QAC3BH,UAAU,EAAEA,UAAU,CAACH,KAAK;QAC5BR,KAAK,EAAE;UACLe,YAAY,EAAEH,YAAY;UAC1BI,YAAY,EAAEH;QAChB;MACF,CAAC,CAAC;IAAA;EACJ;AACF,CAAC,CAAC","names":["makeDelayProps","useDelay","useProxiedModel","defineComponent","VHover","name","props","disabled","Boolean","modelValue","type","default","undefined","emits","value","setup","slots","isHovering","runOpenDelay","runCloseDelay","_slots$default","onMouseenter","onMouseleave"],"sources":["../../../src/components/VHover/VHover.tsx"],"sourcesContent":["// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VHover = defineComponent({\n  name: 'VHover',\n\n  props: {\n    disabled: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: undefined,\n    },\n\n    ...makeDelayProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isHovering = useProxiedModel(props, 'modelValue')\n    const { runOpenDelay, runCloseDelay } = useDelay(props, value => !props.disabled && (isHovering.value = value))\n\n    return () => slots.default?.({\n      isHovering: isHovering.value,\n      props: {\n        onMouseenter: runOpenDelay,\n        onMouseleave: runCloseDelay,\n      },\n    })\n  },\n})\n\nexport type VHover = InstanceType<typeof VHover>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}